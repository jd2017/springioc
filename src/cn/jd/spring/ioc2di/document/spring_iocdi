ioc和di的意义
一、   文档管理系统：
     1、文档的总的接口
          Document
             writeDocument
             readDocument
     2、文档的实现类
          WordDocument
          ExcelDocument
          PDFDocument
     3、文档的管理类
          DocumentManager
             Document document;
             writeDocument(){}
             readDocument(){}
     4、测试类
     	public class DocumentTest {
			@Test
			public void testDocument(){
				/**
				 * 1、创建一个Document对象
				 * 2、创建DocumentManager对象
				 * 3、调用方法
				 */
				Document wordDocument = new WordDocument();
				DocumentManager documentManager = new DocumentManager(wordDocument);
				documentManager.read();
				documentManager.write();
			}
		}
		
		Document wordDocument = new WordDocument();
		等号的左边是接口，等号的右边是实现类
		
利用spring容器做:
   public class DocumentManager {
		private Document document;
		public Document getDocument() {
			return document;
		}
		public void setDocument(Document document) {
			this.document = document;
		}
		public DocumentManager(){
			
		}
		public DocumentManager(Document document){
			this.document = document;
		}
		public void read(){
			this.document.read();
		}
		public void write(){
			this.document.write();
		}
	}
说明：
   在编写DocumentManager类的时候，无需关注Document接口是由谁来实现的，
   	具体谁来实现的是由spring的配置文件来决定的，所以在代码端做到了完全的面向接口编程
   	
ioc和di的意义: 完全面向接口编程，无需关注接口（document）的实现，通过spring配置来实现；
 二、 mvc的内容:
      1、建立三个层
          com.itheima08.spring.mvc.action
          com.itheima08.spring.mvc.service
          com.itheima08.spring.mvc.service.impl
          com.itheima08.spring.mvc.dao
          com.itheima08.spring.mvc.dao.impl
      2、通过spring的配置文件的形式，给类中的接口赋值
      	<bean id="personAction" class="com.itheima08.spring.mvc.action.PersonAction">
		<property name="personService">
			<ref bean="personService"/>
		</property>
		</bean>
		<bean id="personService" class="com.itheima08.spring.mvc.service.impl.PersonServiceImpl">
			<property name="personDao">
				<ref bean="personDao"/>
			</property>
		</bean>
		<bean id="personDao" class="com.itheima08.spring.mvc.dao.impl.PersonDaoImpl"></bean>